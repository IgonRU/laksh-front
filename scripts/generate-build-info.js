const fs = require('fs');
const path = require('path');
const { getCurrentVersion } = require('./version-manager');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ git
function getGitInfo() {
  try {
    const { execSync } = require('child_process');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç
    const commitHash = execSync('git rev-parse --short HEAD', { encoding: 'utf8' }).trim();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ç–∫—É
    const branch = execSync('git rev-parse --abbrev-ref HEAD', { encoding: 'utf8' }).trim();
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥
    let lastTag = '';
    try {
      lastTag = execSync('git describe --tags --abbrev=0', { encoding: 'utf8' }).trim();
    } catch (e) {
      lastTag = 'no-tag';
    }
    
    return { commitHash, branch, lastTag };
  } catch (e) {
    return { commitHash: 'unknown', branch: 'unknown', lastTag: 'unknown' };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∏–ª–¥–µ
function generateBuildInfo() {
  const now = new Date();
  const gitInfo = getGitInfo();
  
  const buildInfo = {
    buildTime: now.toISOString(),
    buildDate: now.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    }),
    buildTimestamp: now.getTime(),
    commitHash: gitInfo.commitHash,
    branch: gitInfo.branch,
    lastTag: gitInfo.lastTag,
    version: getCurrentVersion()
  };
  
  // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
  const fileContent = `// –≠—Ç–æ—Ç —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ —Å–±–æ—Ä–∫–µ
// –ù–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é!

export const BUILD_INFO = ${JSON.stringify(buildInfo, null, 2)};

export default BUILD_INFO;
`;

  // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
  const outputPath = path.join(__dirname, '..', 'src', 'app', '_shared', 'build-info.ts');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  const dir = path.dirname(outputPath);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
  fs.writeFileSync(outputPath, fileContent, 'utf8');
  
  console.log('‚úÖ Build info generated successfully!');
  console.log(`üìÅ File: ${outputPath}`);
  console.log(`üïê Build time: ${buildInfo.buildDate}`);
  console.log(`üîó Commit: ${buildInfo.commitHash}`);
  console.log(`üåø Branch: ${buildInfo.branch}`);
  console.log(`üè∑Ô∏è  Tag: ${buildInfo.lastTag}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateBuildInfo();
