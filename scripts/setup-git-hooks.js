#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîß Setting up Git hooks...');

const hooksDir = path.join(__dirname, '..', '.git', 'hooks');
const preCommitHook = path.join(hooksDir, 'pre-commit');

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
  if (!fs.existsSync(hooksDir)) {
    console.error('‚ùå Not a git repository. Please run "git init" first.');
    process.exit(1);
  }

  // –°–æ–∑–¥–∞–µ–º pre-commit hook
  const hookContent = `#!/bin/sh
# Pre-commit hook for automatic version bumping
# This file is automatically generated. Do not edit manually.

cd "${path.resolve(__dirname, '..')}"
node "scripts/pre-commit.js"
`;

  fs.writeFileSync(preCommitHook, hookContent, 'utf8');
  
  // –î–µ–ª–∞–µ–º hook –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
  execSync(`chmod +x "${preCommitHook}"`, { stdio: 'inherit' });
  
  console.log('‚úÖ Pre-commit hook installed successfully!');
  console.log(`üìÅ Hook location: ${preCommitHook}`);
  console.log('');
  console.log('üìã What happens now:');
  console.log('  ‚Ä¢ Every commit will automatically bump the patch version');
  console.log('  ‚Ä¢ Build info will be updated with new version');
  console.log('  ‚Ä¢ Both package.json and build-info.ts will be added to commit');
  console.log('');
  console.log('üöÄ Try making a commit to see it in action!');
  
} catch (error) {
  console.error('‚ùå Failed to setup git hooks:', error.message);
  process.exit(1);
}
